/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/auth/login': RouteRecordInfo<'/auth/login', '/auth/login', Record<never, never>, Record<never, never>>,
    '/auth/signup': RouteRecordInfo<'/auth/signup', '/auth/signup', Record<never, never>, Record<never, never>>,
    '/cart/': RouteRecordInfo<'/cart/', '/cart', Record<never, never>, Record<never, never>>,
    '/dashboard/': RouteRecordInfo<'/dashboard/', '/dashboard', Record<never, never>, Record<never, never>>,
    '/dashboard/CustomerDashboard': RouteRecordInfo<'/dashboard/CustomerDashboard', '/dashboard/CustomerDashboard', Record<never, never>, Record<never, never>>,
    '/dashboard/ProductForm': RouteRecordInfo<'/dashboard/ProductForm', '/dashboard/ProductForm', Record<never, never>, Record<never, never>>,
    '/dashboard/ProfileForm': RouteRecordInfo<'/dashboard/ProfileForm', '/dashboard/ProfileForm', Record<never, never>, Record<never, never>>,
    '/dashboard/VendorDashboard': RouteRecordInfo<'/dashboard/VendorDashboard', '/dashboard/VendorDashboard', Record<never, never>, Record<never, never>>,
    '/orders/customer': RouteRecordInfo<'/orders/customer', '/orders/customer', Record<never, never>, Record<never, never>>,
    '/orders/vendor': RouteRecordInfo<'/orders/vendor', '/orders/vendor', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/auth/login.vue': {
      routes: '/auth/login'
      views: never
    }
    'src/pages/auth/signup.vue': {
      routes: '/auth/signup'
      views: never
    }
    'src/pages/cart/index.vue': {
      routes: '/cart/'
      views: never
    }
    'src/pages/dashboard/index.vue': {
      routes: '/dashboard/'
      views: never
    }
    'src/pages/dashboard/CustomerDashboard.vue': {
      routes: '/dashboard/CustomerDashboard'
      views: never
    }
    'src/pages/dashboard/ProductForm.vue': {
      routes: '/dashboard/ProductForm'
      views: never
    }
    'src/pages/dashboard/ProfileForm.vue': {
      routes: '/dashboard/ProfileForm'
      views: never
    }
    'src/pages/dashboard/VendorDashboard.vue': {
      routes: '/dashboard/VendorDashboard'
      views: never
    }
    'src/pages/orders/customer.vue': {
      routes: '/orders/customer'
      views: never
    }
    'src/pages/orders/vendor.vue': {
      routes: '/orders/vendor'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
